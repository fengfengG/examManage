{"version":3,"sources":["api/index.js","hoc/jurisdiction.jsx","routes/RouteView.jsx","api/port/port.js","store/model sync nonrecursive /.js$","store/model/authorization.js","utils/request.js","utils/creatToken.js","store/index.js","config/tabBar.js","components/loading.jsx","containers/main/index.jsx","api/user.js","containers/user/login.jsx","routes/RouteConfig.js","index.js","App.jsx"],"names":["getImg","uid","request","get","port","params","authorization","exitTest","tid","addTestType","parmas","post","searchQuestion","getTitleType","getClassType","getTestType","getQuestions","identityId","saveTest","data","addUser","userName","updateUser","addIdentity","addApi","apiAuthority","viewAuthority","identityAuthority","banClass","getSubject","addBanClass","getRoom","addRoom","getStudent","searchStudent","delGrade","name","console","log","delRoom","id","delStudent","updateGrade","getExamType","getCourse","createExam","getTestList","updateExam","getExamList","getpaperlist","studentExamList","getZuiHouQuestions","getTest","saveStudentAnswer","getSearchlist","getExamListDetail","Com","RouteView","this","props","children","map","item","index","redirect","key","from","path","to","jurisdiction","view_authority","split","includes","render","component","React","Component","state","opt","getCookie","JSON","parse","api","msg","setState","login","verify","upload","getQsn","getSbjQsn","everyTest","grade","getSearchList","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","token","types","type","reducers","changeToken","action","changeUid","changeType","namespace","axios","create","timeout","interceptors","use","config","FormData","method","qs","stringify","headers","response","error","Cookies","setCookie","set","expires","context","require","getModel","tabBar","icon","Loading","className","SubMenu","Header","Sider","beforeUpload","file","isJpgOrPng","message","isLt2M","size","Main","collapsed","theme","current","title","loading","user","handleChange","info","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","uploadButton","src","alt","listType","showUploadList","onChange","style","width","mode","defaultSelectedKeys","length","el","Item","onClick","history","push","padding","margin","fallback","jwt","decode","connect","Verify","Login","keyId","getFieldDecorator","form","xs","span","offset","onSubmit","handleSubmit","bind","rules","required","initialValue","prefix","color","placeholder","dangerouslySetInnerHTML","__html","htmlType","temp","captcha","preventDefault","validateFields","err","values","username","password","encode","then","res","dispatch","success","a","setFieldsValue","RouteConfig","lazy","createHashHistory","app","dva","model","default","createModel","router","start"],"mappings":"kHAAA,k3CAIO,SAASA,EAAOC,GACnB,OAAOC,IAAQC,IAAIC,IAAa,CAC5BC,OAAQ,CACJJ,SAML,SAASK,EAAcL,GAC1B,OAAOC,IAAQC,IAAIC,IAAoB,CACnCC,OAAQ,CACJJ,SAKL,SAASM,EAASC,GACrB,OAAON,IAAQC,IAAIC,IAAe,CAC9BC,OAAQ,CACJG,SAmBL,SAASC,EAAYC,GACxB,OAAOR,IAAQS,KAAKP,IAAiBM,GAGlC,SAASE,EAAeF,GAC3B,OAAOR,IAAQS,KAAKP,IAAgBM,GAIjC,SAASG,IACZ,OAAOX,IAAQC,IAAIC,KAGhB,SAASU,IACZ,OAAOZ,IAAQC,IAAIC,KAGhB,SAASW,IACZ,OAAOb,IAAQC,IAAIC,KAGhB,SAASY,IACZ,OAAOd,IAAQC,IAAIC,KAahB,SAASa,IACZ,OAAOf,IAAQC,IAAIC,KAGhB,SAASc,EAASC,GACrB,OAAOjB,IAAQS,KAAKP,IAAee,GAGhC,SAASC,EAAQf,GACpB,OAAOH,IAAQS,KAAKP,IAAcC,GAG/B,SAASgB,IACZ,OAAOnB,IAAQC,IAAIC,KAGhB,SAASkB,EAAWjB,GACvB,OAAOH,IAAQS,KAAKP,IAAiBC,GAGlC,SAASkB,EAAYlB,GACxB,OAAOH,IAAQS,KAAKP,IAAkBC,GAGnC,SAASmB,EAAOnB,GACnB,OAAOH,IAAQS,KAAKP,IAAaC,GAG9B,SAASoB,IACZ,OAAOvB,IAAQC,IAAIC,KAIhB,SAASsB,IACZ,OAAOxB,IAAQC,IAAIC,KAGhB,SAASuB,IACZ,OAAOzB,IAAQC,IAAIC,KAIhB,SAASwB,IACZ,OAAO1B,IAAQS,KAAKP,KAOjB,SAASyB,IACZ,OAAO3B,IAAQS,KAAKP,KAGjB,SAAS0B,EAAYzB,GACxB,OAAOH,IAAQS,KAAKP,IAAkBC,GAGnC,SAAS0B,IACZ,OAAO7B,IAAQS,KAAKP,KAGjB,SAAS4B,EAAQ3B,GACpB,OAAOH,IAAQS,KAAKP,IAAcC,GAG/B,SAAS4B,IACZ,OAAO/B,IAAQS,KAAKP,KAGjB,SAAS8B,EAAc7B,GAC1B,OAAOH,IAAQS,KAAKP,IAAoBC,GAGrC,SAAS8B,EAASC,GAErB,OADAC,QAAQC,IAAIF,EAAM,OACXlC,IAAQC,IAAIC,IAAe,CAC9BC,OAAQ,CACJ+B,UAKL,SAASG,EAAQC,GACpB,OAAOtC,IAAQC,IAAIC,IAAc,CAC7BC,OAAQ,CACJmC,QAKL,SAASC,EAAWD,GACvB,OAAOtC,IAAQC,IAAIC,IAAiB,CAChCC,OAAQ,CACJmC,QAKL,SAASE,EAAYrC,GACxB,OAAOH,IAAQS,KAAKP,IAAkBC,GAGnC,SAASsC,IACZ,OAAOzC,IAAQC,IAAIC,KAGhB,SAASwC,IACZ,OAAO1C,IAAQC,IAAIC,KAGhB,SAASyC,EAAWxC,GACvB,OAAOH,IAAQS,KAAKP,IAAiBC,GAIlC,SAASyC,IACZ,OAAO5C,IAAQC,IAAIC,KAGhB,SAAS2C,EAAW5B,GACvB,OAAOjB,IAAQS,KAAKP,IAAiBe,GAKlC,SAAS6B,IACZ,OAAO9C,IAAQC,IAAIC,KAIhB,SAAS6C,IACZ,OAAO/C,IAAQC,IAAIC,KAIhB,SAAS8C,IACZ,OAAOhD,IAAQC,IAAIC,KAIhB,SAAS+C,EAAmBX,GAC/B,OAAOtC,IAAQC,IAAIC,IAAyB,CACxCC,OAAQ,CACJmC,QAML,SAASY,IACZ,OAAOlD,IAAQC,IAAIC,KAGhB,SAASiD,EAAkBhD,GAE9B,OADAgC,QAAQC,IAAIjC,EAAQ,YACbH,IAAQS,KAAKP,IAAwBC,GAGzC,SAASiD,EAAcjD,GAC1B,OAAOH,IAAQS,KAAKP,IAAoBC,GAGrC,SAASkD,EAAkBf,GAC9B,OAAOtC,IAAQC,IAAIC,IAAwB,CACvCC,OAAQ,CACJmC,U,mLCvODgB,ECRUC,E,iLACP,IAAD,OACL,OACI,kBAAC,SAAD,KACKC,KAAKC,MAAMC,SAASC,IAAI,SAACC,EAAMC,GAE5B,OAAID,EAAKE,SAED,kBAAC,WAAD,CACIC,IAAKH,EAAKtB,GACV0B,KAAMJ,EAAKK,KACXC,GAAIN,EAAKE,WAIb,EAAKL,MAAMU,aAAaC,eAEpB,EAAKX,MAAMU,aAAaC,eACnBC,MAAM,KACNC,SAASV,EAAK1B,MAGf,kBAAC,QAAD,CACI6B,IAAKH,EAAKtB,GACV2B,KAAML,EAAKK,KACXM,OAAQ,SAAAd,GACJ,OACI,kBAACG,EAAKY,UAAN,eACIT,IAAKH,EAAKtB,IACNmB,EAFR,CAGIC,SAAUE,EAAKF,oBAdvC,EAuBI,kBAAC,QAAD,CACIK,IAAKH,EAAKtB,GACV2B,KAAML,EAAKK,KACXM,OAAQ,SAAAd,GACJ,OACI,kBAACG,EAAKY,UAAN,eACIT,IAAKH,EAAKtB,IACNmB,EAFR,CAGIC,SAAUE,EAAKF,sB,GA/CxBe,IAAMC,WDQlCpB,ECqDgBC,EAA3BA,EDpDQ,YACI,WAAYE,GAAQ,IAAD,8BACf,4CAAMA,KACDkB,MAAQ,CACTR,aAAc,CACVC,eAAgB,KAJT,EADvB,wMAUYQ,EAAM,GACNC,gBACAD,EAAME,KAAKC,MAAMF,gBAZ7B,SAeyBG,IAAkBJ,EAAI7E,KAf/C,QAeYkB,EAfZ,QAiBiBgE,IAAIb,eACTZ,KAAK0B,SAAS,CACVf,aAAclD,EAAKgE,MAGvBzB,KAAK0B,SAAS,CACVf,aAAc,KAvB9B,mIA6BQ,OACI,6BACI,kBAACb,EAAD,iBACQE,KAAKC,MADb,CAEIU,aAAcX,KAAKmB,MAAMR,qBAjC7C,EAAM,CAA4BO,c,qEEd1C,giDACO,IAAMS,EAAQ,SAERrF,EAAS,UAETsF,EAAS,UAET/E,EAAW,YAEXgF,EAAS,UAETjF,EAAgB,sBAEhBkF,EAAS,YAETC,EAAY,eAEZhF,EAAY,oBAEZI,EAAe,qBAEfC,EAAe,qBAEfC,EAAc,oBAEdC,EAAe,qBAEfE,EAAW,iBAEXwE,EAAY,kBAEZzE,EAAa,mBAEbG,EAAU,gBAEVC,EAAW,iBAEXC,EAAa,mBAEbC,EAAc,oBAEdC,EAAS,eAETC,EAAe,qBAEfC,EAAgB,sBAEhBC,EAAoB,0BAGpBC,EAAW,kBAEX+D,EAAQ,eAER9D,EAAa,oBAEbC,EAAc,qBAEdC,EAAU,iBAEVC,EAAU,iBAEVC,EAAa,oBAEbC,EAAgB,uBAEhBC,EAAW,kBAEXI,EAAU,iBAEVE,EAAa,oBAEbC,EAAc,qBAEdC,EAAc,oBAEdC,EAAY,kBAEZC,EAAa,mBAGbC,EAAc,oBAEdC,EAAa,mBAEbG,EAAkB,mBAElBF,EAAc,oBAEdC,EAAe,mBAEfE,EAAqB,wBAErBC,EAAU,mBAEVC,EAAoB,6BAEpBuC,EAAgB,sBAEhBrC,EAAoB,2B,wCCnGjC,IAAIM,EAAM,CACT,qBAAsB,KAIvB,SAASgC,EAAeC,GACvB,IAAItD,EAAKuD,EAAsBD,GAC/B,OAAOE,EAAoBxD,GAE5B,SAASuD,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEpC,EAAKiC,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,EAEP,OAAOrC,EAAIiC,GAEZD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAKxC,IAEpBgC,EAAeU,QAAUR,EACzBS,EAAOC,QAAUZ,EACjBA,EAAerD,GAAK,K,gnBCjBpB,IAAIsC,EAAM,GACNC,gBACHD,EAAME,KAAKC,MAAMF,gBAElB,IAAMF,EAAQ,CACb6B,MAAO5B,EAAI4B,OAAS,GACpBzG,IAAK6E,EAAI7E,KAAO,GAChB0G,MAAO7B,EAAI8B,MAAQ,IAEdC,EAAW,CAChBC,YADgB,SACJjC,EAAOkC,GAElB,OADAlC,EAAM6B,MAAQK,EAAOL,MACd,EAAP,GACI7B,IAGLmC,UAPgB,SAONnC,EAAOkC,GAEhB,OADAlC,EAAM5E,IAAM8G,EAAO9G,IACZ,EAAP,GACI4E,IAGLoC,WAbgB,SAaLpC,EAAOkC,GAEjB,OADAlC,EAAM8B,MAAQI,EAAOJ,MACd,EAAP,GACI9B,KAIS,WACdqC,UAAW,gBACXrC,QACAgC,a,0nBClCD,IAAM3G,E,OAAUiH,EAAMC,OAAO,CAC5BC,QAAS,MAIVnH,EAAQoH,aAAapH,QAAQqH,IAAI,SAAAC,GAOhC,OANMA,EAAOrG,gBAAgBsG,WACV,SAAlBD,EAAOE,OACHF,EAAOrG,KAAOwG,IAAGC,UAAH,KAAkBJ,EAAOrG,OACvCqG,EAAOnH,OAAP,KAAqBmH,EAAOnH,SAEjCmH,EAAOK,QAAQ,gBAAkB,oCAC1BL,IAIRtH,EAAQoH,aAAaQ,SAASP,IAC7B,SAAAO,GACC,OAAOA,EAAS3G,MAEjB,SAAA4G,GAEC1F,QAAQ0F,MAAMA,KAID7H,O,sIC7Bf,sFAQO,SAAS6E,IACf,OAAOiD,IAAQ7H,IAAI,SAEb,SAAS8H,EAAU9G,GACzB6G,IAAQE,IAAI,QAAS/G,EAAM,CAAEgH,QAAS,M,yGCZjCC,EAAUC,OACVC,EAAWF,EAAQ/B,OAAOxC,IAAI,SAAAI,GAAG,OAAImE,EAAQnE,K,+MCgHpCsE,EAjHA,CAAC,CACR/F,GAAI,OACJJ,KAAM,2BACN+B,KAAM,aACNqE,KAAM,UACN5E,SAAU,CAAC,CACHpB,GAAI,UACJJ,KAAM,2BACN+B,KAAM,0BACNqE,KAAM,SAEV,CACIhG,GAAI,WACJJ,KAAM,2BACN+B,KAAM,sBACNqE,KAAM,SAEV,CACIhG,GAAI,WACJJ,KAAM,2BACN+B,KAAM,sBACNqE,KAAM,WAIlB,CACIhG,GAAI,OACJJ,KAAM,2BACN+B,KAAM,aACNqE,KAAM,QACN5E,SAAU,CAAC,CACHpB,GAAI,UACJJ,KAAM,2BACN+B,KAAM,qBACNqE,KAAM,SAEV,CACIhG,GAAI,WACJJ,KAAM,2BACN+B,KAAM,sBACNqE,KAAM,YAIlB,CACIhG,GAAI,OACJJ,KAAM,2BACN+B,KAAM,aACNqE,KAAM,UACN5E,SAAU,CAAC,CACHpB,GAAI,UACJJ,KAAM,2BACN+B,KAAM,qBACNqE,KAAM,aAEV,CACIhG,GAAI,WACJJ,KAAM,2BACN+B,KAAM,sBACNqE,KAAM,UAIlB,CACIhG,GAAI,QACJJ,KAAM,2BACN+B,KAAM,cACNqE,KAAM,OACN5E,SAAU,CAAC,CACHpB,GAAI,WACJJ,KAAM,2BACN+B,KAAM,uBACNqE,KAAM,YAEV,CACIhG,GAAI,YACJJ,KAAM,2BACN+B,KAAM,wBACNqE,KAAM,YAEV,CACIhG,GAAI,eACJJ,KAAM,2BACN+B,KAAM,2BACNqE,KAAM,WAIlB,CACIhG,GAAI,OACJJ,KAAM,2BACN+B,KAAM,aACNqE,KAAM,SACN5E,SAAU,CAAC,CACPpB,GAAI,YACJJ,KAAM,2BACN+B,KAAM,uBACNqE,KAAM,kBAGd,CACIhG,GAAI,UACJJ,KAAM,2BACN+B,KAAM,gBACNqE,KAAM,QACN5E,SAAU,CAAC,CACPpB,GAAI,SACJJ,KAAM,2BACN+B,KAAM,uBACNqE,KAAM,W,kBCzGGC,G,wLAEnB,OACC,yBAAKC,UAAU,WACd,iC,GAJiC9D,c,2BCK7B+D,E,IAAAA,QACAC,E,IAAAA,OAAQC,E,IAAAA,MAQhB,SAASC,EAAaC,GAClB,IAAMC,EAA2B,eAAdD,EAAKnC,MAAuC,cAAdmC,EAAKnC,KACjDoC,GACDC,EAAA,EAAQlB,MAAM,0EAElB,IAAMmB,EAASH,EAAKI,KAAO,KAAO,KAAO,EAIzC,OAHKD,GACDD,EAAA,EAAQlB,MAAM,4CAEXiB,GAAcE,E,IAGJE,E,2MACjBvE,MAAQ,CACJwE,WAAW,EACXC,MAAO,OACPC,QAAS,IACTC,MAAO,2BACPC,SAAS,EACTC,KAAM,iCACNrF,aAAc,I,EAGlBsF,aAAe,SAAAC,GACc,cAArBA,EAAKb,KAAKc,OAIW,SAArBD,EAAKb,KAAKc,SAEV,EAAKzE,SAAS,CACVsE,KAAME,EAAKb,KAAKjB,SAAS4B,OArCzC,SAAmBI,EAAKC,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,OAAQ,kBAAMH,EAASC,EAAOG,UACtDH,EAAOI,cAAcN,GAoCbO,CAAUT,EAAKb,KAAKuB,cAAe,SAAAC,GAAQ,OACvC,EAAKnF,SAAS,CACVmF,WACAd,SAAS,OAXjB,EAAKrE,SAAS,CAAEqE,SAAS,K,wEAgBvB,IAAD,OACCe,EACF,6BACI,uBAAM5D,KAAMlD,KAAKmB,MAAM4E,QAAU,UAAY,UAG7Cc,EAAa7G,KAAKmB,MAAlB0F,SACR,OACI,yBAAK7B,UAAU,QACX,uBAAQA,UAAU,QACd,kBAACE,EAAD,CAAQF,UAAU,oBACd,yBAAKA,UAAU,YACX,yBACI+B,IAAI,gEACJC,IAAI,wBAGZ,yBAAKhC,UAAU,aACX,yBAAKA,UAAU,UACX,uBACItG,KAAK,SACLuI,SAAS,eACTjC,UAAU,kBACVkC,gBAAgB,EAChB7D,OAAO,UACP+B,aAAcA,EACd+B,SAAUnH,KAAKiG,aACfxI,KAAM,CACFuF,MAAOhD,KAAKC,MAAM+C,QAGrB6D,EACG,yBACIE,IAAKF,EACLG,IAAI,SACJI,MAAO,CAAEC,MAAO,UAGpBP,IAIZ,yBAAK9B,UAAU,aAAahF,KAAKmB,MAAM6E,QAG/C,2BACI,kBAACb,EAAD,CAAOkC,MAAO,IAAKrC,UAAU,aACzB,uBACIY,MAAM,OACN0B,KAAK,SACLC,oBAAqB,CAAC,MAErB1C,EAAO1E,IAAI,SAAAC,GACR,GACI,EAAKe,MAAMR,aAAaG,SACpBV,EAAK1B,MAGT,OAAO0B,EAAKF,UACRE,EAAKF,SAASsH,OACd,kBAACvC,EAAD,CACI1E,IAAKH,EAAKtB,GACVgH,MACI,8BACI,uBACI5C,KAAM9C,EAAK0E,OAGf,8BAAO1E,EAAK1B,QAInB0B,EAAKF,SAASC,IAAI,SAAAsH,GACf,OACI,sBAAMC,KAAN,CACInH,IAAKkH,EAAG3I,GACR6I,QAAS,WACL,EAAK1H,MAAM2H,QAAQC,KACfJ,EAAGhH,MAEP,EAAKiB,SAAS,CACVoE,MACI2B,EAAG/I,SAIf,8BACI,uBACIwE,KACIuE,EAAG3C,OAIX,8BACK2C,EAAG/I,WAQ5B,sBAAMgJ,KAAN,CACInH,IAAKH,EAAKG,IACVoH,QAAS,WACL,EAAK1H,MAAM2H,QAAQC,KACfzH,EAAKK,QAIb,8BACI,uBAAMyC,KAAM9C,EAAK0E,OAEjB,8BAAO1E,EAAK1B,YAQxC,uBAAQ0I,MAAO,CAAEU,QAAS,gBACtB,uBAAYV,MAAO,CAAEW,OAAQ,WACzB,sBAAYL,KAAZ,KACK1H,KAAKmB,MAAM2E,QAGpB,kBAAC,WAAD,CAAUkC,SAAU,kBAAC,EAAD,OAChB,yBAAKhD,UAAU,OACX,kBAACjF,EAAA,EAAD,CAAWG,SAAUF,KAAKC,MAAMC,mB,4KAW5CsB,IAAWxB,KAAKC,MAAM1D,K,cAAlC6J,E,OACJzH,QAAQC,IAAIwH,GACC,MACTJ,EAAOiC,IAAIC,OAAOlI,KAAKC,MAAM+C,MADpB,O,SAGIxB,IAAkBxB,KAAKC,MAAM1D,K,OAA1CkB,E,OACJuC,KAAK0B,SAAS,CACVf,aAAclD,EAAKgE,IAAIb,eAAeC,MAAM,KAC5CmF,S,0GAjLsB9E,aA6LlCwE,EAAOyC,kBAPiB,SAAAhH,GACpB,MAAO,CACH5E,IAAK4E,EAAMvE,cAAcL,IACzByG,MAAO7B,EAAMvE,cAAcoG,QAI5BmF,CAAyBzC,G,yHCxMzB,SAAS0C,IACf,OAAO5L,IAAQC,IAAIC,K,aCuNL2L,EA5Nd,IAAK3E,OAAO,CAAEhF,KAAM,gB,GACpByJ,kBARuB,SAAShH,GAC7B,MAAO,CACH6B,MAAO7B,EAAMvE,cAAcoG,MAC3BC,MAAO9B,EAAMvE,cAAcqG,Q,eAO/B,WAAYhD,GAAQ,IAAD,8BACf,4CAAMA,KACDkB,MAAQ,CACTiH,OAAQ,GACRE,MAAO,IAJI,E,sEAOT,IACEC,EAAsBvI,KAAKC,MAAMuI,KAAjCD,kBACR,OACI,yBAAKvD,UAAU,SACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,cAAd,wCACA,2BACI,uBAAKyD,GAAI,CAAEC,KAAM,GAAIC,OAAQ,IACzB,uBACIC,SAAU5I,KAAK6I,aAAaC,KAAK9I,MACjCgF,UAAU,cAEV,sBAAM0C,KAAN,KACKa,EAAkB,WAAY,CAC3BQ,MAAO,CACH,CACIC,UAAU,EACVzD,QACI,sDAGZ0D,aAAc,gBARjBV,CAUG,uBACIW,OACI,uBACIhG,KAAK,OACLkE,MAAO,CACH+B,MAAO,qBAInBC,YAAY,WACZpE,UAAU,WAItB,sBAAM0C,KAAN,KACKa,EAAkB,WAAY,CAC3BQ,MAAO,CACH,CACIC,UAAU,EACVzD,QACI,gDAGZ0D,aAAc,UARjBV,CAUG,uBACIW,OACI,uBACIhG,KAAK,OACLkE,MAAO,CACH+B,MAAO,qBAInBjG,KAAK,WACLkG,YAAY,eAIxB,sBAAM1B,KAAN,KACKa,EAAkB,SAAU,CACzBQ,MAAO,CACH,CACIC,UAAU,EACVzD,QACI,2CALfgD,CASG,uBACIW,OACI,uBACIhG,KAAK,SACLkE,MAAO,CACH+B,MAAO,qBAInBC,YAAY,YAGpB,yBAAKpE,UAAU,UACX,yBACIqE,wBAAyB,CACrBC,OAAQtJ,KAAKmB,MAAMiH,QAEvBpD,UAAU,cAEd,0BACI2C,QAAS3H,KAAK4B,OAAOkH,KAAK9I,MAC1BgF,UAAU,cAFd,2CAQR,sBAAM0C,KAAN,KACI,mCACIxE,KAAK,UACLqG,SAAS,SACTvE,UAAU,qBAHd,YAIc,YAJd,wB,wKAkBTxD,I,OAAf4G,E,OACJpI,KAAK0B,SAAS,CACV0G,OAAQA,EAAOoB,KAAKC,QACpBnB,MAAOF,EAAOoB,KAAKlB,Q,iQAKJ9G,I,OAAf4G,E,OACJpI,KAAK0B,SAAS,CACV0G,OAAQA,EAAOoB,KAAKC,QACpBnB,MAAOF,EAAOoB,KAAKlB,Q,uIAGd9F,GAAI,IAAD,OACZA,EAAEkH,iBACF1J,KAAKC,MAAMuI,KAAKmB,eAAe,SAACC,EAAKC,GACjC,IAAKD,EAAK,KAEAE,EAA+BD,EAA/BC,SAAUC,EAAqBF,EAArBE,SAAU3B,EAAWyB,EAAXzB,OAE1B2B,EAAW9B,IAAI+B,OAAOD,EADT,QDtJPtM,EC0JI,CACNqM,WACAC,WACAzB,MAAO,EAAKnH,MAAMmH,MAClBF,UD7JZ5L,IAAQS,KAAKP,IAAYe,IC8JdwM,KAAK,SAAAC,GAEAA,EAAIxH,MAEJ6B,YAAU,CACNvB,MAAOkH,EAAIlH,MACXzG,IAAK2N,EAAI3N,IACT2G,KAAMgH,EAAIhH,OAId,EAAKjD,MAAMkK,SAAS,CAChBjH,KAAM,4BACNF,MAAOkH,EAAIlH,QAGf,EAAK/C,MAAMkK,SAAS,CAChBjH,KAAM,0BACN3G,IAAK2N,EAAI3N,MAIb,EAAK0D,MAAMkK,SAAS,CAChBjH,KAAM,2BACND,MAAOiH,EAAIhH,OAGfqC,EAAA,EAAQ6E,QAAQF,EAAIzI,IAAK,EAAG,WAED,EAAnB,EAAKxB,MAAMgD,QAAc,EAEzB,EAAKhD,MAAM2H,QAAQC,KACf,2BAEsB,EAAnB,EAAK5H,MAAMgD,QAAc,EAEhC,EAAKhD,MAAM2H,QAAQC,KACf,2BAEsB,EAAnB,EAAK5H,MAAMgD,QAAc,GAEhC,EAAKhD,MAAM2H,QAAQC,KAAK,2BAIhCtC,EAAA,EAAQlB,MAAM6F,EAAIzI,IAAK,EAAvB,qBAA0B,4BAAA4I,EAAA,4DAEtB,EAAKpK,MAAMuI,KAAK8B,eAAe,CAC3BlC,OAAQ,KAHU,SAKH5G,IALG,OAKlB4G,EALkB,OAMtB,EAAK1G,SAAS,CACV0G,OAAQA,EAAOoB,KAAKC,QACpBnB,MAAOF,EAAOoB,KAAKlB,QARD,4CD5M3C,IAAe7K,Q,GCIFyD,e,MCqLLqJ,EAlMK,CAAC,CACpB9J,KAAM,QACNO,UAAW0E,EACXhH,KAAM,eACNI,GAAI,EACJoB,SAAU,CAAC,CACVO,KAAM,aACNO,UAAWC,IAAMuJ,KAAK,kBACrB,iCACD9L,KAAM,2BACNI,GAAI,EACJoB,SAAU,CAAC,CACVO,KAAM,yBACN/B,KAAM,2BACNI,GAAI,EACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,gEAGF,CACC/J,KAAM,sBACN/B,KAAM,2BACNI,GAAI,EACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,6EAGF,CACC/J,KAAM,sBACN/B,KAAM,2BACNI,GAAI,EACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,+EAKH,CACC/J,KAAM,aACNO,UAAWC,IAAMuJ,KAAK,kBACrB,iCACD9L,KAAM,2BACNI,GAAI,EACJoB,SAAU,CAAC,CACVO,KAAM,qBACN/B,KAAM,2BACNI,GAAI,EACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,+DAGF,CACC/J,KAAM,sBACN/B,KAAM,2BACNI,GAAI,EACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,+EAKH,CACC/J,KAAM,aACN3B,GAAI,EACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,iCACD9L,KAAM,2BACNwB,SAAU,CAAC,CACVO,KAAM,qBACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,+DAGF,CACC/J,KAAM,sBACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,6EAGF,CACC/J,KAAM,6BACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,6EAEC,CACF/J,KAAM,4BACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,yEAKH,CACC/J,KAAM,cACN3B,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,iCACD9L,KAAM,2BACNwB,SAAU,CAAC,CACVO,KAAM,uBACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,4EAGF,CACC/J,KAAM,wBACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,4EAGF,CACC/J,KAAM,2BACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,+EAKH,CACC/J,KAAM,aACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,iCACDtK,SAAU,CAAC,CACVO,KAAM,uBACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,6EAGF,CACC/J,KAAM,4BACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,+EAKH,CACC/J,KAAM,gBACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,iCACDtK,SAAU,CAAC,CACVO,KAAM,uBACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,6EAGF,CACC/J,KAAM,kCACN/B,KAAM,2BACNI,GAAI,GACJkC,UAAWC,IAAMuJ,KAAK,kBACrB,sCAMD,CACF/J,KAAM,SACN/B,KAAM,eACNI,GAAI,GACJkC,UAAWqH,GAEZ,CACC5H,KAAM,IACN3B,GAAI,GACJwB,SAAU,W,OC9LX,IAAMmK,EAAoB9F,EAAQ,IAAW8F,kBACvCC,EAAMC,IAAIF,IPFT,SAAqBC,GACpB9F,EAASzE,IAAI,SAAAI,GAAG,OAAImK,EAAIE,MAAMrK,EAAIsK,WOG1CC,CAAYJ,GACZA,EAAIK,OCFW,YAA2B,IAAZnD,EAAW,EAAXA,QAC1B,OACI,kBAAC,SAAD,CAAQA,QAASA,GACb,kBAAC7H,EAAA,EAAD,CAAWG,SAAUqK,ODAjCG,EAAIM,MAAM,W","file":"static/js/main.f1759a42.chunk.js","sourcesContent":["import * as port from './port/port';\r\nimport request from '@/utils/request';\r\n\r\n//根据登陆者自动获取用户头像\r\nexport function getImg(uid) {\r\n    return request.get(port.getImg, {\r\n        params: {\r\n            uid\r\n        }\r\n    })\r\n}\r\n\r\n//获取登陆者的身份权限页面\r\nexport function authorization(uid) {\r\n    return request.get(port.authorization, {\r\n        params: {\r\n            uid\r\n        }\r\n    })\r\n}\r\n//获取编辑页面所需要的题目信息\r\nexport function exitTest(tid) {\r\n    return request.get(port.exitTest, {\r\n        params: {\r\n            tid\r\n        }\r\n    })\r\n}\r\n//根据课程类型获取题目\r\nexport function getQsn(Tid) {\r\n    //console.log(port.getQsn, \"这是什么\");\r\n    return request.post(port.getQsn, Tid);\r\n}\r\n//上传头像\r\nexport function upload(data) {\r\n    console.log(data, \"data进来了吗\");\r\n    return request.post(port.upload, data)\r\n}\r\n//获取相应的题目\r\nexport function getSbjQsn(id) {\r\n    return request.get(port.getSbjQsn + `${id}`);\r\n}\r\n//添加试题类型\r\nexport function addTestType(parmas){\r\n    return request.post(port.addTestType,parmas)\r\n}\r\n//获取对应的题目\r\nexport function searchQuestion(parmas) {\r\n    return request.post(port.getSbjQsn, parmas);\r\n}\r\n\r\n//获取试题类型的接口\r\nexport function getTitleType() {\r\n    return request.get(port.getTitleType);\r\n}\r\n//获取课程类型接口\r\nexport function getClassType() {\r\n    return request.get(port.getClassType);\r\n}\r\n//获取考试时间\r\nexport function getTestType() {\r\n    return request.get(port.getTestType);\r\n}\r\n//获取题目列表\r\nexport function getQuestions() {\r\n    return request.get(port.getQuestions);\r\n}\r\n\r\n//获取每份试题的接口\r\nexport function getEveryTest(id) {\r\n    return request.get(port.everyTest, {\r\n        params: {\r\n            id\r\n        }\r\n    })\r\n}\r\n\r\n//获取身份ID\r\nexport function identityId() {\r\n    return request.get(port.identityId);\r\n}\r\n//添加试题\r\nexport function saveTest(data) {\r\n    return request.post(port.saveTest, data);\r\n}\r\n//添加新用户\r\nexport function addUser(params) {\r\n    return request.post(port.addUser, params);\r\n}\r\n//获取用户信息\r\nexport function userName() {\r\n    return request.get(port.userName);\r\n}\r\n//更新用户\r\nexport function updateUser(params) {\r\n    return request.post(port.updateUser, params);\r\n}\r\n//添加身份\r\nexport function addIdentity(params) {\r\n    return request.post(port.addIdentity, params);\r\n}\r\n//添加api接口权限\r\nexport function addApi(params) {\r\n    return request.post(port.addApi, params);\r\n}\r\n//获取api接口权限id\r\nexport function apiAuthority() {\r\n    return request.get(port.apiAuthority);\r\n}\r\n\r\n//获取视图接口权限\r\nexport function viewAuthority() {\r\n    return request.get(port.viewAuthority);\r\n}\r\n//身份和api接口权限\r\nexport function identityAuthority() {\r\n    return request.get(port.identityAuthority);\r\n}\r\n\r\n//获取所有班级\r\nexport function banClass() {\r\n    return request.post(port.banClass);\r\n}\r\n//直接获取班级\r\nexport function grade() {\r\n    return request.post(port.grade);\r\n}\r\n//获取所有课程\r\nexport function getSubject() {\r\n    return request.post(port.getSubject);\r\n}\r\n//添加班级\r\nexport function addBanClass(params) {\r\n    return request.post(port.addBanClass, params);\r\n}\r\n//获取所有教室\r\nexport function getRoom() {\r\n    return request.post(port.getRoom);\r\n}\r\n//添加教室\r\nexport function addRoom(params) {\r\n    return request.post(port.addRoom, params);\r\n}\r\n//获取所有学生\r\nexport function getStudent() {\r\n    return request.post(port.getStudent);\r\n}\r\n//搜索某个学生\r\nexport function searchStudent(params) {\r\n    return request.post(port.searchStudent, params);\r\n}\r\n//删除班级\r\nexport function delGrade(name) {\r\n    console.log(name, \"api\")\r\n    return request.get(port.delGrade, {\r\n        params: {\r\n            name\r\n        }\r\n    });\r\n}\r\n//删除教室\r\nexport function delRoom(id) {\r\n    return request.get(port.delRoom, {\r\n        params: {\r\n            id\r\n        }\r\n    });\r\n}\r\n//删除学生\r\nexport function delStudent(id) {\r\n    return request.get(port.delStudent, {\r\n        params: {\r\n            id\r\n        }\r\n    });\r\n}\r\n//更新班级\r\nexport function updateGrade(params) {\r\n    return request.post(port.updateGrade, params)\r\n}\r\n//考试管理/添加考试/  :获取考试类型\r\nexport function getExamType() {\r\n    return request.get(port.getExamType)\r\n}\r\n//考试管理/添加考试/  :获取课程\r\nexport function getCourse() {\r\n    return request.get(port.getCourse)\r\n}\r\n//考试管理/添加考试/   :创建考试试卷\r\nexport function createExam(params) {\r\n    return request.post(port.createExam, params);\r\n}\r\n\r\n//在为创造的试卷页面中获取之前创造的所有题目\r\nexport function getTestList() {\r\n    return request.get(port.getTestList)\r\n}\r\n\r\nexport function updateExam(data) {\r\n    return request.post(port.updateExam, data)\r\n}\r\n\r\n\r\n// 考试管理/试卷列表/渲染列表\r\nexport function getExamList() {\r\n    return request.get(port.getExamList)\r\n}\r\n\r\n//阅卷管理的带【批班级\r\nexport function getpaperlist() {\r\n    return request.get(port.getpaperlist)\r\n}\r\n\r\n//学生考试列表接口\r\nexport function studentExamList() {\r\n    return request.get(port.studentExamList)\r\n}\r\n\r\n//得到问题最后\r\nexport function getZuiHouQuestions(id) {\r\n    return request.get(port.getZuiHouQuestions, {\r\n        params: {\r\n            id\r\n        }\r\n    })\r\n}\r\n\r\n//获取test\r\nexport function getTest() {\r\n    return request.get(port.getTest)\r\n}\r\n//保存学生答题答案\r\nexport function saveStudentAnswer(params) {\r\n    console.log(params, \"apiiiiii\")\r\n    return request.post(port.saveStudentAnswer, params)\r\n}\r\n// 模糊搜索\r\nexport function getSearchlist(params) {\r\n    return request.post(port.getSearchList, params)\r\n}\r\n// 试题详情页面\r\nexport function getExamListDetail(id) {\r\n    return request.get(port.getExamListDetail, {\r\n        params: {\r\n            id\r\n        }\r\n    })\r\n}","/*\r\n * 此文件的作用是检验用户权限 在跳转每一个路由的时候判断一下该用户是不是有权限进行访问\r\n * 防止该用户进行链接进行跳转\r\n * @Author: chenqiang\r\n * @Date: 2019-09-08 12:15:52\r\n * @Last Modified by: chenqiang\r\n * @Last Modified time: 2019-09-08 19:55:36\r\n */\r\nimport React, { Component } from 'react';\r\nimport * as api from '@/api/index';\r\nimport { getCookie } from '@/utils/creatToken';\r\n\r\nexport default function() {\r\n    return Com => {\r\n        return class jurisdiction extends Component {\r\n            constructor(props) {\r\n                super(props);\r\n                this.state = {\r\n                    jurisdiction: {\r\n                        view_authority: ''\r\n                    }\r\n                };\r\n            }\r\n            async componentDidMount() {\r\n                let opt = {};\r\n                if (getCookie()) {\r\n                    opt = JSON.parse(getCookie());\r\n                }\r\n\r\n                let data = await api.authorization(opt.uid);\r\n                //console.log(data.msg.view_authority, '000000000000000000000');\r\n                if (data.msg.view_authority) {\r\n                    this.setState({\r\n                        jurisdiction: data.msg\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        jurisdiction: {}\r\n                    });\r\n                }\r\n                //console.log(this.state.jurisdiction, '刷新');\r\n            }\r\n            render() {\r\n                return (\r\n                    <div>\r\n                        <Com\r\n                            {...this.props}\r\n                            jurisdiction={this.state.jurisdiction}\r\n                        ></Com>\r\n                    </div>\r\n                );\r\n            }\r\n        };\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect, withRouter } from 'dva/router';\r\n//引入高阶组件并将其挂载到页面上\r\nimport jurisdiction from '@/hoc/jurisdiction';\r\n\r\nexport default class RouteView extends React.Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                {this.props.children.map((item, index) => {\r\n                    //console.log(item.id);\r\n                    if (item.redirect) {\r\n                        return (\r\n                            <Redirect\r\n                                key={item.id}\r\n                                from={item.path}\r\n                                to={item.redirect}\r\n                            ></Redirect>\r\n                        );\r\n                    } else {\r\n                        if (this.props.jurisdiction.view_authority) {\r\n                            if (\r\n                                this.props.jurisdiction.view_authority\r\n                                    .split(',')\r\n                                    .includes(item.name)\r\n                            ) {\r\n                                return (\r\n                                    <Route\r\n                                        key={item.id}\r\n                                        path={item.path}\r\n                                        render={props => {\r\n                                            return (\r\n                                                <item.component\r\n                                                    key={item.id}\r\n                                                    {...props}\r\n                                                    children={item.children}\r\n                                                ></item.component>\r\n                                            );\r\n                                        }}\r\n                                    ></Route>\r\n                                );\r\n                            }\r\n                        } else {\r\n                            return (\r\n                                <Route\r\n                                    key={item.id}\r\n                                    path={item.path}\r\n                                    render={props => {\r\n                                        return (\r\n                                            <item.component\r\n                                                key={item.id}\r\n                                                {...props}\r\n                                                children={item.children}\r\n                                            ></item.component>\r\n                                        );\r\n                                    }}\r\n                                ></Route>\r\n                            );\r\n                        }\r\n                    }\r\n                })}\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nRouteView = jurisdiction()(RouteView);\r\n","//登录接口\r\nexport const login = \"/login\";\r\n//获取头像\r\nexport const getImg = \"/getImg\";\r\n//获取验证码\r\nexport const verify = \"/verify\";\r\n//编辑题目请求接口\r\nexport const exitTest = \"/exitTest\"\r\n//上传头像功能\r\nexport const upload = \"/upload\";\r\n//用户登录进来获取登录权限问题 \r\nexport const authorization = \"/user/authorization\";\r\n//根据课程类型获取题目\r\nexport const getQsn = \"/test/Qsn\";\r\n//获取相应的题目\r\nexport const getSbjQsn = \"/test/search\";\r\n//添加试题类型\r\nexport const addTestType=\"/test/addTestType\"\r\n//获取题目类型\r\nexport const getTitleType = \"/test/getTitleType\";\r\n//获取课程类型\r\nexport const getClassType = \"/test/getClassType\";\r\n//获取试卷类型\r\nexport const getTestType = \"/test/getTestType\";\r\n//获取试题\r\nexport const getQuestions = \"/test/getQuestions\";\r\n//保存试题\r\nexport const saveTest = \"/test/saveTest\"\r\n//获取某一份试题的接口\r\nexport const everyTest = \"/test/everyTest\"\r\n//获取身份id\r\nexport const identityId = '/user/identityId';\r\n//添加新用户\r\nexport const addUser = '/user/addUser';\r\n//获取用户信息\r\nexport const userName = '/user/userName';\r\n//更新用户\r\nexport const updateUser = '/user/updateUser';\r\n//添加身份\r\nexport const addIdentity = '/user/addIdentity';\r\n//获取视图接口权限\r\nexport const addApi = '/user/addApi';\r\n//获取api接口权限id\r\nexport const apiAuthority = '/user/apiAuthority';\r\n//获取视图接口权限 \r\nexport const viewAuthority = '/user/viewAuthority';\r\n//身份和api接口权限 \r\nexport const identityAuthority = '/user/identityAuthority';\r\n\r\n//获取所有班级\r\nexport const banClass = '/class/banClass';\r\n//直接获取班级\r\nexport const grade = '/class/grade';\r\n//获取所有课程地址\r\nexport const getSubject = '/class/getSubject';\r\n//添加班级地址\r\nexport const addBanClass = '/class/addBanClass';\r\n//获取所有教室地址\r\nexport const getRoom = '/class/getRoom';\r\n//添加教室地址\r\nexport const addRoom = '/class/addRoom';\r\n//获取所有学生地址\r\nexport const getStudent = '/class/getStudent';\r\n//搜索某个学生\r\nexport const searchStudent = '/class/searchStudent';\r\n//删除班级地址\r\nexport const delGrade = '/class/delGrade';\r\n//删除教室地址\r\nexport const delRoom = '/class/delRoom';\r\n//删除学生地址\r\nexport const delStudent = '/class/delStudent';\r\n//更新班级\r\nexport const updateGrade = \"/class/updateGrade\"\r\n//获取考试类型\r\nexport const getExamType = '/exam/getExamType';\r\n//获取课程\r\nexport const getCourse = '/exam/getCourse';\r\n//创建考试试卷\r\nexport const createExam = '/exam/createExam';\r\n//获取考试试题列表\r\n\r\nexport const getTestList = \"/exam/getTestList\";\r\n//更新试卷内的题目\r\nexport const updateExam = \"/exam/updateExam\"\r\n//学生考试列表地址\r\nexport const studentExamList = \"/student/getList\"\r\n// 考试管理/试卷列表/渲染列表\r\nexport const getExamList = '/exam/getExamList';\r\n//阅卷管理的带【批班级\r\nexport const getpaperlist = '/paper/classlist';\r\n//得到问题最后\r\nexport const getZuiHouQuestions = '/student/getQuestions';\r\n//获取test地址\r\nexport const getTest = '/student/getTest';\r\n//保存学生答题答案\r\nexport const saveStudentAnswer = '/student/saveStudentAnswer';\r\n//搜索\r\nexport const getSearchList = '/exam/getSearchList';\r\n// 试题的详情页\r\nexport const getExamListDetail = '/exam/getExamListDetail';","var map = {\n\t\"./authorization.js\": 599\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 598;","//从本地取出cookie来给仓库进行默认赋值\r\n\r\nimport {\r\n\tgetCookie\r\n} from \"@/utils/creatToken\";\r\nlet opt = {}\r\nif (getCookie()) {\r\n\topt = JSON.parse(getCookie())\r\n}\r\nconst state = {\r\n\ttoken: opt.token || '',\r\n\tuid: opt.uid || \"\",\r\n\ttypes: opt.type || \"\"\r\n};\r\nconst reducers = {\r\n\tchangeToken(state, action) {\r\n\t\tstate.token = action.token;\r\n\t\treturn {\r\n\t\t\t...state\r\n\t\t};\r\n\t},\r\n\tchangeUid(state, action) {\r\n\t\tstate.uid = action.uid;\r\n\t\treturn {\r\n\t\t\t...state\r\n\t\t};\r\n\t},\r\n\tchangeType(state, action) {\r\n\t\tstate.types = action.types;\r\n\t\treturn {\r\n\t\t\t...state\r\n\t\t};\r\n\t}\r\n};\r\nexport default {\r\n\tnamespace: 'authorization',\r\n\tstate,\r\n\treducers\r\n};","import qs from 'qs';\r\nimport axios from 'axios';\r\n\r\nconst request = axios.create({\r\n\ttimeout: 9000\r\n});\r\n\r\n//请求时发送公共的参数\r\nrequest.interceptors.request.use(config => {\r\n\tif (!(config.data instanceof FormData)) {\r\n\t\tconfig.method === 'post'\r\n\t\t\t? (config.data = qs.stringify({ ...config.data }))\r\n\t\t\t: (config.params = { ...config.params });\r\n\t}\r\n\tconfig.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\treturn config;\r\n});\r\n\r\n//请求响应后的拦截\r\nrequest.interceptors.response.use(\r\n\tresponse => {\r\n\t\treturn response.data;\r\n\t},\r\n\terror => {\r\n\t\t// const { status, data } = error.response;\r\n\t\tconsole.error(error);\r\n\t}\r\n);\r\n\r\nexport default request;\r\n","/*\r\n * @Author: chenqiang \r\n * @Date: 2019-09-04 07:51:59 \r\n * @Last Modified by:   chenqiang \r\n * @Last Modified time: 2019-09-04 07:51:59 \r\n */\r\nimport Cookies from 'js-cookie';\r\n\r\nexport function getCookie() {\r\n\treturn Cookies.get('token');\r\n}\r\nexport function setCookie(data) {\r\n\tCookies.set('token', data, { expires: 3 });\r\n}\r\n","const context = require.context('./model', false, /\\.js$/);\r\nconst getModel = context.keys().map(key => context(key));\r\n\r\nexport function createModel(app) {\r\n\treturn getModel.map(key => app.model(key.default));\r\n}\r\n","const tabBar = [{\r\n        id: 'test',\r\n        name: '试题管理',\r\n        path: '/main/test',\r\n        icon: 'sliders',\r\n        children: [{\r\n                id: 'addTest',\r\n                name: '添加试题',\r\n                path: '/main/test/addTest/null',\r\n                icon: 'smile'\r\n            },\r\n            {\r\n                id: 'typeTest',\r\n                name: '试题分类',\r\n                path: '/main/test/typeTest',\r\n                icon: 'smile'\r\n            },\r\n            {\r\n                id: 'lookTest',\r\n                name: '查看试题',\r\n                path: '/main/test/lookTest',\r\n                icon: 'smile'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'user',\r\n        name: '用户管理',\r\n        path: '/main/user',\r\n        icon: 'heart',\r\n        children: [{\r\n                id: 'addUser',\r\n                name: '添加用户',\r\n                path: '/main/user/addUser',\r\n                icon: 'alert'\r\n            },\r\n            {\r\n                id: 'showUser',\r\n                name: '用户展示',\r\n                path: '/main/user/showUser',\r\n                icon: 'camera'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'exam',\r\n        name: '考试管理',\r\n        path: '/main/exam',\r\n        icon: 'profile',\r\n        children: [{\r\n                id: 'addExam',\r\n                name: '添加考试',\r\n                path: '/main/exam/addExam',\r\n                icon: 'pie-chart'\r\n            },\r\n            {\r\n                id: 'examList',\r\n                name: '试卷列表',\r\n                path: '/main/exam/examList',\r\n                icon: 'fund'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'class',\r\n        name: '班级管理',\r\n        path: '/main/class',\r\n        icon: 'tags',\r\n        children: [{\r\n                id: 'banClass',\r\n                name: '班级管理',\r\n                path: '/main/class/banClass',\r\n                icon: 'appstore'\r\n            },\r\n            {\r\n                id: 'roomClass',\r\n                name: '教室管理',\r\n                path: '/main/class/roomClass',\r\n                icon: 'database'\r\n            },\r\n            {\r\n                id: 'studentClass',\r\n                name: '学生管理',\r\n                path: '/main/class/studentClass',\r\n                icon: 'frown'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'read',\r\n        name: '阅卷管理',\r\n        path: '/main/read',\r\n        icon: 'wallet',\r\n        children: [{\r\n            id: \"awaitRead\",\r\n            name: '待批班级',\r\n            path: '/main/read/awaitRead',\r\n            icon: 'account-book'\r\n        }]\r\n    },\r\n    {\r\n        id: 'student',\r\n        name: '学生主页',\r\n        path: '/main/student',\r\n        icon: 'html5',\r\n        children: [{\r\n            id: \"attend\",\r\n            name: '参加考试',\r\n            path: '/main/student/attend',\r\n            icon: 'copy'\r\n        }]\r\n    }\r\n];\r\nexport default tabBar;","import React, { Component } from 'react';\r\nimport { Spin } from 'antd';\r\nimport '@/common/css/loading.css';\r\n\r\nexport default class Loading extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"example\">\r\n\t\t\t\t<Spin />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component, Suspense } from 'react';\r\nimport RouteView from '@/routes/RouteView';\r\nimport { Layout, Menu, Breadcrumb, Icon, message, Upload } from 'antd';\r\nimport tabBar from '@/config/tabBar';\r\nimport Loading from '@/components/loading.jsx';\r\nimport * as api from '@/api/index';\r\nimport { connect } from 'dva';\r\nimport jwt from 'jwt-simple';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Sider } = Layout;\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n        message.error('您只能上传 JPG/PNG 格式的文件!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n        message.error('图像必须小于2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n}\r\n\r\nexport default class Main extends Component {\r\n    state = {\r\n        collapsed: false,\r\n        theme: 'dark',\r\n        current: '1',\r\n        title: '添加试题',\r\n        loading: false,\r\n        user: '尊贵的用户',\r\n        jurisdiction: []\r\n    };\r\n\r\n    handleChange = info => {\r\n        if (info.file.status === 'uploading') {\r\n            this.setState({ loading: true });\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n            // Get this url from response in real world.\r\n            this.setState({\r\n                user: info.file.response.user\r\n            });\r\n            getBase64(info.file.originFileObj, imageUrl =>\r\n                this.setState({\r\n                    imageUrl,\r\n                    loading: false\r\n                })\r\n            );\r\n        }\r\n    };\r\n    render() {\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n            </div>\r\n        );\r\n        const { imageUrl } = this.state;\r\n        return (\r\n            <div className='wrap'>\r\n                <Layout className='main'>\r\n                    <Header className='header headerNav'>\r\n                        <div className='logoLeft'>\r\n                            <img\r\n                                src='https://www.tsinghua.edu.cn/publish/thu2018/images/logo_1.svg'\r\n                                alt='八维网'\r\n                            />\r\n                        </div>\r\n                        <div className='logoRight'>\r\n                            <div className='upload'>\r\n                                <Upload\r\n                                    name='avatar'\r\n                                    listType='picture-card'\r\n                                    className='avatar-uploader'\r\n                                    showUploadList={false}\r\n                                    action='/upload'\r\n                                    beforeUpload={beforeUpload}\r\n                                    onChange={this.handleChange}\r\n                                    data={{\r\n                                        token: this.props.token\r\n                                    }}\r\n                                >\r\n                                    {imageUrl ? (\r\n                                        <img\r\n                                            src={imageUrl}\r\n                                            alt='avatar'\r\n                                            style={{ width: '100%' }}\r\n                                        />\r\n                                    ) : (\r\n                                        uploadButton\r\n                                    )}\r\n                                </Upload>\r\n                            </div>\r\n                            <div className='personage'>{this.state.user}</div>\r\n                        </div>\r\n                    </Header>\r\n                    <Layout>\r\n                        <Sider width={200} className='silderNav'>\r\n                            <Menu\r\n                                theme='dark'\r\n                                mode='inline'\r\n                                defaultSelectedKeys={['1']}\r\n                            >\r\n                                {tabBar.map(item => {\r\n                                    if (\r\n                                        this.state.jurisdiction.includes(\r\n                                            item.name\r\n                                        )\r\n                                    ) {\r\n                                        return item.children &&\r\n                                            item.children.length ? (\r\n                                            <SubMenu\r\n                                                key={item.id}\r\n                                                title={\r\n                                                    <span>\r\n                                                        <Icon\r\n                                                            type={item.icon}\r\n                                                        />\r\n                                                        {/* 一级展示 */}\r\n                                                        <span>{item.name}</span>\r\n                                                    </span>\r\n                                                }\r\n                                            >\r\n                                                {item.children.map(el => {\r\n                                                    return (\r\n                                                        <Menu.Item\r\n                                                            key={el.id}\r\n                                                            onClick={() => {\r\n                                                                this.props.history.push(\r\n                                                                    el.path\r\n                                                                );\r\n                                                                this.setState({\r\n                                                                    title:\r\n                                                                        el.name\r\n                                                                });\r\n                                                            }}\r\n                                                        >\r\n                                                            <span>\r\n                                                                <Icon\r\n                                                                    type={\r\n                                                                        el.icon\r\n                                                                    }\r\n                                                                />\r\n                                                                {/* 二级展示 */}\r\n                                                                <span>\r\n                                                                    {el.name}\r\n                                                                </span>\r\n                                                            </span>\r\n                                                        </Menu.Item>\r\n                                                    );\r\n                                                })}\r\n                                            </SubMenu>\r\n                                        ) : (\r\n                                            <Menu.Item\r\n                                                key={item.key}\r\n                                                onClick={() => {\r\n                                                    this.props.history.push(\r\n                                                        item.path\r\n                                                    );\r\n                                                }}\r\n                                            >\r\n                                                <span>\r\n                                                    <Icon type={item.icon} />\r\n                                                    {/* 二级展示 */}\r\n                                                    <span>{item.name}</span>\r\n                                                </span>\r\n                                            </Menu.Item>\r\n                                        );\r\n                                    }\r\n                                })}\r\n                            </Menu>\r\n                        </Sider>\r\n                        <Layout style={{ padding: '0 24px 24px' }}>\r\n                            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                                <Breadcrumb.Item>\r\n                                    {this.state.title}\r\n                                </Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            <Suspense fallback={<Loading />}>\r\n                                <div className='box'>\r\n                                    <RouteView children={this.props.children} />\r\n                                </div>\r\n                            </Suspense>\r\n                        </Layout>\r\n                    </Layout>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n    async componentDidMount() {\r\n        //根据用户uid获取用户的头像\r\n        let img = await api.getImg(this.props.uid);\r\n        console.log(img);\r\n        let secret = 'uuu';\r\n        let user = jwt.decode(this.props.token, secret);\r\n        //发送请求 获取页面视图权限问题\r\n        let data = await api.authorization(this.props.uid);\r\n        this.setState({\r\n            jurisdiction: data.msg.view_authority.split(','),\r\n            user\r\n        });\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        uid: state.authorization.uid,\r\n        token: state.authorization.token\r\n    };\r\n};\r\n\r\nMain = connect(mapStateToProps)(Main);\r\n// Main = jurisdiction()(Main);\r\n","/*\r\n * @Author: chenqiang\r\n * @Date: 2019-09-03 17:16:29\r\n * @Last Modified by: yixian\r\n * @Last Modified time: 2019-09-03 23:10:43\r\n */\r\nimport * as port from './port/port';\r\nimport request from '@/utils/request';\r\n\r\n/**\r\n * 登录\r\n * @param {data} Object\r\n */\r\nexport function Login(data) {\r\n\treturn request.post(port.login, data);\r\n}\r\n/**\r\n * 获取图形验证码\r\n */\r\nexport function Verify() {\r\n\treturn request.get(port.verify);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Form, Icon, Input, Button, message } from 'antd';\r\nimport { connect } from 'dva'; //引入connect组件使用dva仓库\r\nimport { setCookie } from '@/utils/creatToken'; //引入本地存储值\r\nimport jwt from 'jwt-simple';\r\nimport * as api from '@/api/user'; //引入网络发送文件\r\nimport '@/common/css/loginCss/index.css';\r\n\r\nconst mapStateToProps = function(state) {\r\n    return {\r\n        token: state.authorization.token,\r\n        types: state.authorization.types\r\n    };\r\n};\r\n\r\n@Form.create({ name: 'normal_login' })\r\n@connect(mapStateToProps)\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Verify: '',\r\n            keyId: ''\r\n        };\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className='login'>\r\n                <div className='login_wrapper'>\r\n                    <h1 className='loginTitle'>考试平台登录</h1>\r\n                    <Row>\r\n                        <Col xs={{ span: 20, offset: 2 }}>\r\n                            <Form\r\n                                onSubmit={this.handleSubmit.bind(this)}\r\n                                className='login-form'\r\n                            >\r\n                                <Form.Item>\r\n                                    {getFieldDecorator('username', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message:\r\n                                                    '请输入您的用户名!'\r\n                                            }\r\n                                        ],\r\n                                        initialValue: '陈强'\r\n                                    })(\r\n                                        <Input\r\n                                            prefix={\r\n                                                <Icon\r\n                                                    type='user'\r\n                                                    style={{\r\n                                                        color: 'rgba(0,0,0,.25)'\r\n                                                    }}\r\n                                                />\r\n                                            }\r\n                                            placeholder='Username'\r\n                                            className='ipts'\r\n                                        />\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    {getFieldDecorator('password', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message:\r\n                                                    '请输入您的密码!'\r\n                                            }\r\n                                        ],\r\n                                        initialValue: '123321'\r\n                                    })(\r\n                                        <Input\r\n                                            prefix={\r\n                                                <Icon\r\n                                                    type='lock'\r\n                                                    style={{\r\n                                                        color: 'rgba(0,0,0,.25)'\r\n                                                    }}\r\n                                                />\r\n                                            }\r\n                                            type='password'\r\n                                            placeholder='Password'\r\n                                        />\r\n                                    )}\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    {getFieldDecorator('Verify', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message:\r\n                                                    '请输入验证码!'\r\n                                            }\r\n                                        ]\r\n                                    })(\r\n                                        <Input\r\n                                            prefix={\r\n                                                <Icon\r\n                                                    type='reddit'\r\n                                                    style={{\r\n                                                        color: 'rgba(0,0,0,.25)'\r\n                                                    }}\r\n                                                />\r\n                                            }\r\n                                            placeholder='Verify'\r\n                                        />\r\n                                    )}\r\n                                    <div className='verify'>\r\n                                        <div\r\n                                            dangerouslySetInnerHTML={{\r\n                                                __html: this.state.Verify\r\n                                            }}\r\n                                            className='verifyImg'\r\n                                        ></div>\r\n                                        <span\r\n                                            onClick={this.verify.bind(this)}\r\n                                            className='verifyWord'\r\n                                        >\r\n                                            看不清,换一张\r\n                                        </span>\r\n                                    </div>\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Button\r\n                                        type='primary'\r\n                                        htmlType='submit'\r\n                                        className='login-form-button'\r\n                                        className='loginBtn'\r\n                                    >\r\n                                        登录\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    async componentDidMount() {\r\n        //发送网络请求获取验证码\r\n        let Verify = await api.Verify();\r\n        this.setState({\r\n            Verify: Verify.temp.captcha,\r\n            keyId: Verify.temp.keyId\r\n        });\r\n    }\r\n    //每次点击获取最新的验证码\r\n    async verify() {\r\n        let Verify = await api.Verify();\r\n        this.setState({\r\n            Verify: Verify.temp.captcha,\r\n            keyId: Verify.temp.keyId\r\n        });\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                //console.log(values);\r\n                let { username, password, Verify } = values;\r\n                let secret = 'xxx';\r\n                password = jwt.encode(password, secret);\r\n                //发送登录的网络请求\r\n                //将密码加密发送\r\n                api.Login({\r\n                    username,\r\n                    password,\r\n                    keyId: this.state.keyId,\r\n                    Verify\r\n                }).then(res => {\r\n                    //console.log(res, '登录成功后的返回结果');\r\n                    if (res.code) {\r\n                        //顺带存到本地\r\n                        setCookie({\r\n                            token: res.token,\r\n                            uid: res.uid,\r\n                            type: res.type\r\n                        });\r\n\r\n                        //调用仓库方法将这个token存到仓库里面去\r\n                        this.props.dispatch({\r\n                            type: 'authorization/changeToken',\r\n                            token: res.token\r\n                        });\r\n                        //调用仓库的方法将uid存到仓库里面去\r\n                        this.props.dispatch({\r\n                            type: 'authorization/changeUid',\r\n                            uid: res.uid\r\n                        });\r\n\r\n                        //调用仓库的方法将type存到仓库中去\r\n                        this.props.dispatch({\r\n                            type: 'authorization/changeType',\r\n                            types: res.type\r\n                        });\r\n\r\n                        message.success(res.msg, 1, () => {\r\n                            //console.log('登录成功后的身份', this.props.types);\r\n                            if (this.props.types * 1 === 0) {\r\n                                //console.log('管理员登录');\r\n                                this.props.history.push(\r\n                                    '/main/test/addTest/null'\r\n                                );\r\n                            } else if (this.props.types * 1 === 1) {\r\n                                //console.log('出题者登录');\r\n                                this.props.history.push(\r\n                                    '/main/test/addTest/null'\r\n                                );\r\n                            } else if (this.props.types * 1 === 2) {\r\n                                //console.log('学生登录');\r\n                                this.props.history.push('/main/student/attend');\r\n                            }\r\n                        });\r\n                    } else {\r\n                        message.error(res.msg, 1, async () => {\r\n                            //取消清空\r\n                            this.props.form.setFieldsValue({\r\n                                Verify: ''\r\n                            });\r\n                            let Verify = await api.Verify();\r\n                            this.setState({\r\n                                Verify: Verify.temp.captcha,\r\n                                keyId: Verify.temp.keyId\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Main from '@/containers/main';\r\nimport Login from '@/containers/user/login';\r\n\r\nconst RouteConfig = [{\r\n\tpath: '/main',\r\n\tcomponent: Main,\r\n\tname: \"主页\",\r\n\tid: 1,\r\n\tchildren: [{\r\n\t\tpath: '/main/test',\r\n\t\tcomponent: React.lazy(() =>\r\n\t\t\timport('@/containers/main/test')),\r\n\t\tname: \"试题管理\",\r\n\t\tid: 2,\r\n\t\tchildren: [{\r\n\t\t\tpath: '/main/test/addTest/:id',\r\n\t\t\tname: \"试题管理\",\r\n\t\t\tid: 3,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/test/addTest.jsx')\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/main/test/typeTest',\r\n\t\t\tname: \"试题管理\",\r\n\t\t\tid: 4,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/test/typeTest.jsx')\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/main/test/lookTest',\r\n\t\t\tname: \"试题管理\",\r\n\t\t\tid: 5,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/test/lookTest.jsx')\r\n\t\t\t)\r\n\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tpath: '/main/user',\r\n\t\tcomponent: React.lazy(() =>\r\n\t\t\timport('@/containers/main/user')),\r\n\t\tname: \"用户管理\",\r\n\t\tid: 6,\r\n\t\tchildren: [{\r\n\t\t\tpath: '/main/user/addUser',\r\n\t\t\tname: \"用户管理\",\r\n\t\t\tid: 7,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/user/addUser.jsx')\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/main/user/showUser',\r\n\t\t\tname: \"用户管理\",\r\n\t\t\tid: 8,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/user/showUser.jsx')\r\n\t\t\t)\r\n\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tpath: '/main/exam',\r\n\t\tid: 9,\r\n\t\tcomponent: React.lazy(() =>\r\n\t\t\timport('@/containers/main/exam')),\r\n\t\tname: \"考试管理\",\r\n\t\tchildren: [{\r\n\t\t\tpath: '/main/exam/addExam',\r\n\t\t\tname: \"考试管理\",\r\n\t\t\tid: 10,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/exam/addExam.jsx')\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/main/exam/examList',\r\n\t\t\tname: \"考试管理\",\r\n\t\t\tid: 11,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/exam/examList.jsx')\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/main/exam/addExamTest/:id',\r\n\t\t\tname: \"考试管理\",\r\n\t\t\tid: 12,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/exam/addExamTest.jsx')\r\n\t\t\t)\r\n\t\t}, {\r\n\t\t\tpath: '/main/exam/examDetail/:id',\r\n\t\t\tname: \"考试管理\",\r\n\t\t\tid: 25,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/exam/examDetail.jsx')\r\n\t\t\t)\r\n\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tpath: '/main/class',\r\n\t\tid: 13,\r\n\t\tcomponent: React.lazy(() =>\r\n\t\t\timport('@/containers/main/class')),\r\n\t\tname: \"班级管理\",\r\n\t\tchildren: [{\r\n\t\t\tpath: '/main/class/banClass',\r\n\t\t\tname: \"班级管理\",\r\n\t\t\tid: 14,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/class/banClass.jsx')\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/main/class/roomClass',\r\n\t\t\tname: \"班级管理\",\r\n\t\t\tid: 15,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/class/roomClass.jsx')\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/main/class/studentClass',\r\n\t\t\tname: \"班级管理\",\r\n\t\t\tid: 16,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/class/studentClass.jsx')\r\n\t\t\t)\r\n\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tpath: '/main/read',\r\n\t\tname: \"阅卷管理\",\r\n\t\tid: 17,\r\n\t\tcomponent: React.lazy(() =>\r\n\t\t\timport('@/containers/main/read')),\r\n\t\tchildren: [{\r\n\t\t\tpath: '/main/read/awaitRead',\r\n\t\t\tname: \"阅卷管理\",\r\n\t\t\tid: 18,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/read/awaitRead.jsx')\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/main/read/detailRead/:id',\r\n\t\t\tname: \"阅卷管理\",\r\n\t\t\tid: 19,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/read/detailRead.jsx')\r\n\t\t\t)\r\n\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tpath: '/main/student',\r\n\t\tname: \"学生主页\",\r\n\t\tid: 20,\r\n\t\tcomponent: React.lazy(() =>\r\n\t\t\timport('@/containers/main/student')),\r\n\t\tchildren: [{\r\n\t\t\tpath: '/main/student/attend',\r\n\t\t\tname: \"学生主页\",\r\n\t\t\tid: 21,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/student/attend.jsx')\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/main/student/detailStudent/:id',\r\n\t\t\tname: \"学生主页\",\r\n\t\t\tid: 22,\r\n\t\t\tcomponent: React.lazy(() =>\r\n\t\t\t\timport('@/containers/main/student/detailStudent.jsx')\r\n\t\t\t)\r\n\t\t}\r\n\t\t]\r\n\t}\r\n\t]\r\n}, {\r\n\tpath: \"/login\",\r\n\tname: \"登录\",\r\n\tid: 23,\r\n\tcomponent: Login\r\n},\r\n{\r\n\tpath: '/',\r\n\tid: 24,\r\n\tredirect: '/login'\r\n}\r\n];\r\n\r\nexport default RouteConfig;","import dva from 'dva';\r\nimport { createModel } from '@/store';\r\nimport App from './App';\r\n\r\nconst createHashHistory = require('history').createHashHistory;\r\nconst app = dva(createHashHistory);\r\n\r\ncreateModel(app);\r\napp.router(App);\r\napp.start('#root');\r\n","import React from 'react';\r\nimport { Router } from 'dva/router';\r\nimport RouteView from '@/routes/RouteView';\r\nimport RouteConfig from '@/routes/RouteConfig';\r\nimport '@/common/css/App.css';\r\n\r\nexport default function App({ history }) {\r\n    return (\r\n        <Router history={history}>\r\n            <RouteView children={RouteConfig}></RouteView>\r\n        </Router>\r\n    );\r\n}\r\n"],"sourceRoot":""}